service: sekond-task

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-central-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
      Resource:
        Fn::Join:
          - ''
          - - 'arn:aws:s3:::'
            - Ref: BulkScriptVitaliyJadexS3Bucket
            - '/*'
    - Effect: 'Allow'
      Action:
        - "dynamodb:GetItem"
        - 'dynamodb:PutItem'
        - 'dynamodb:UpdateItem'
        - 'dynamodb:Scan'
        - 'dynamodb:BatchWriteItem'
        - "dynamodb:PartiQLInsert"
        - "dynamodb:PartiQLDelete"
        - "dynamodb:PartiQLUpdate"
        - "dynamodb:PartiQLSelect"
      Resource:
        Fn::GetAtt: [ UsersBulkScriptVitaliyJadex, Arn ]
    - Effect: 'Allow'
      Action:
        - 'states:StartExecution'
      Resource: "arn:aws:states:*:*:stateMachine:*"
    - Effect: Allow
      Action:
        - "sqs:SendMessage"
        - "sqs:ReceiveMessage"
        - "sqs:DeleteMessage"
        - "sqs:GetQueueAttributes"
      Resource:
        Fn::GetAtt: [ BulkScriptVitaliyJadexSqsQueue, Arn ]

    - Effect: Allow
      Action:
        - "sqs:SendMessage"
        - "sqs:ReceiveMessage"
        - "sqs:DeleteMessage"
        - "sqs:GetQueueAttributes"
      Resource:
        Fn::GetAtt: [ DeadLetterQueue, Arn ]


resources:
  Resources:
    DeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: bulk-script-Vitaliy-Jadex-sqs-dlq
    BulkScriptVitaliyJadexS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: bulk-script-vitaliy-jadex

    BulkScriptVitaliyJadexSqsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: bulk-script-Vitaliy-Jadex-sqs-queue

    UsersBulkScriptVitaliyJadex:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: UsersBulkScriptVitaliyJadex
        AttributeDefinitions:
          - AttributeName: UserAccountId
            AttributeType: S
        KeySchema:
          - AttributeName: UserAccountId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5


functions:

  processCsv:
    handler: functions/process-csv.handler
    events:
      - s3:
          bucket: !Ref BulkScriptVitaliyJadexS3Bucket
          existing: true
          event: s3:ObjectCreated:*
    environment:
      DYNAMODB_TABLE: !Ref UsersBulkScriptVitaliyJadex
      SQS_QUEUE_URL:
        Fn::Join:
          - ""
          - - "https://sqs."
            - Ref: AWS::Region
            - ".amazonaws.com/"
            - Ref: AWS::AccountId
            - "/"
            - Fn::GetAtt: [ BulkScriptVitaliyJadexSqsQueue, QueueName ]
      AWS_BATCH_SIZE: 10
      MESSAGE_BATCH_SIZE: 200

  processUsers:
    handler: functions/process-users.handler
    environment:
      DYNAMODB_TABLE: !Ref UsersBulkScriptVitaliyJadex
      MAX_RETRY_ATTEMPTS: 3
      BACKOFF_TIME_MS: 2000
      DLQ:
        Fn::Join:
          - ""
          - - "https://sqs."
            - Ref: AWS::Region
            - ".amazonaws.com/"
            - Ref: AWS::AccountId
            - "/"
            - Fn::GetAtt: [ DeadLetterQueue, QueueName ]
      QUEUE_URL:
        Fn::Join:
          - ""
          - - "https://sqs."
            - Ref: AWS::Region
            - ".amazonaws.com/"
            - Ref: AWS::AccountId
            - "/"
            - Fn::GetAtt: [ DeadLetterQueue, QueueName ]
    deadLetter:
      targetArn:
        GetResourceArn: DeadLetterQueue
    events:
      - sqs:
          arn:
            Fn::GetAtt: [ BulkScriptVitaliyJadexSqsQueue, Arn ]




package:
  exclude:
    - "*.png"
    - "docs/"
    - node_modules/*/test//*.*
    - ".terraform/"
    - "terraform/"
    - "test/"
    - ".vscode/"


custom:
  useDotenv: true
plugins:
  - serverless-step-functions
  - serverless-dotenv-plugin
  - serverless-dynamodb-local
